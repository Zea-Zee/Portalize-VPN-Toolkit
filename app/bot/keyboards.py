from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from database.requests import get_plans


start_button = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å ", callback_data="start_command")]
    ]
)

options = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='ü§ë–ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞ 7 –¥–Ω–µ–πü§ë', callback_data='trial_button')],
    [InlineKeyboardButton(text='üí∏–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É —Å—Ä–∞–∑—Éüí∏', callback_data='choose_plan|0')],
    [InlineKeyboardButton(text='üéÅ–ü–æ–¥–∞—Ä–∏—Ç—å –¥—Ä—É–≥—ÉüéÅ', callback_data='present_button')]
    ],
    resize_keyboard=True,
    input_field_placeholder="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ, —ç—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ)"
)

subscribe = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/PortalizerVPN')],
    [InlineKeyboardButton(text='–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è ‚úÖ', callback_data='check_subscription')]
])

platform_options = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='Android ü§ñ', callback_data='choose_tunnel,android')],
    [InlineKeyboardButton(text='iOS üçè', callback_data='choose_tunnel,android')],
    [InlineKeyboardButton(text='Windows ', callback_data='choose_tunnel,android')],
    [InlineKeyboardButton(text='Android ü§ñ', callback_data='choose_tunnel,android')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥ üîô', callback_data='back_button')]
    ],
    resize_keyboard=True
)


async def build_plans(type=0):
    plans = (await get_plans(type)).all()
    keyboard = InlineKeyboardBuilder()
    if not plans:
        raise Exception("There are not any plans: build_plans")
    for plan in plans:
        # print(plan.id)
        text = plan.name
        if plan.discount:
            discount_sum = round(plan.price * (plan.discount / 100))
            new_price = round(plan.price - discount_sum)
            text += f" {new_price} —Ä—É–±–ª–µ–π (-{round(plan.discount)}% / -{discount_sum}—Ä.)"
        else:
            text += f" {round(plan.price)} —Ä—É–±–ª–µ–π"
        callback_data = f"payment|{plan.id}"
        print("callback_data", callback_data)
        keyboard.add(InlineKeyboardButton(text=text, callback_data=callback_data))
    return keyboard.adjust(1).as_markup()


async def build_payment_keyboard(payment_url: str, payment_id: str, price: int):
    payment = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f"–û–ø–ª–∞—Ç–∏—Ç—å {price} —Ä—É–±–ª–µ–π", url=payment_url)],
        [InlineKeyboardButton(text='–Ø –æ–ø–ª–∞—Ç–∏–ª üí≤', callback_data=f"check_payment|{payment_id}")]
    ])
    return payment
